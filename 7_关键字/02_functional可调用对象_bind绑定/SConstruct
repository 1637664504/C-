## 模板1
import os

env = None
# 1.编译器
if os.system("which 123"):
    env = Environment()
else:
    # clang编译器
    env = Environment(tools=["default", "clang"])
    env["CC"] = ["clang"]
    env["CXX"] = ["clang++"]

env["PROGSUFFIX"] = ".out"              # 可执行文件后缀.out
env["CCFLAGS"] = " -g3 -O0 -Wall"       # gdb 调试
src_list = [
    "1_functional_可调用对象_说明与实例.cc",
    "21_bind_绑定函数.cc",
    "22_bind_绑定函数_多种参数.cc",
    "23_bind_绑定函数_函数参数为引用.cc",
    "24_bind_绑定函数_类的成员函数.cc",
    "25_map_bind_关联_类的成员函数.cc",
    "26_map_bind绑定函数_在类里面_初始化关联_类的成员函数.cc",
]
for src in src_list:
    env.Program(Split(src))
